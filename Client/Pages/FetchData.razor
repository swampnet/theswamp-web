@page "/fetchdata"
@using TheSwamp.Shared
@inject HttpClient Http

<h1>Fetch data</h1>

<p>Demonstrates fetching data from the server.</p>

@if (values == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudTable Items="@values" Dense="true">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Last Update</MudTh>
            <MudTh>Last Value</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.LastUpdateOnUtc</MudTd>
            <MudTd>@context.LastValue</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    [Parameter]
    public int Device { get; set; }

    private DataSourceSummary[] values;

    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
    }

    protected override async Task OnParametersSetAsync()
    {
      try
      {
            values = await Http.GetFromJsonAsync<DataSourceSummary[]>($"/api/monitor/summary");
      }
      catch (Exception ex)
      {
            Console.WriteLine(ex.ToString());
      }
    }
}
