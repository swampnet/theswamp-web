@page "/wine"

@using TheSwamp.Shared

@inject HttpClient _http
@inject NavigationManager _navigationManager

@if (_review == null)
{
    <div class="busy" />
}
else
{
    var title = $"Id: {_review.Id}\nCountry:{_review.Country}\nRegion:{_review.Region}\nProducerName: {_review.ProducerName}\nColour: {_review.Colour}\nSubType: {_review.SubType}\nVintage: {_review.Vintage}";

    <div>
        <h3 title="@title">@_review.Name</h3>
        <p>
            <span class="oi oi-double-quote-serif-left" aria-hidden="true"></span>
            @_review.Blurb
            <span class="oi oi-double-quote-serif-right" aria-hidden="true"></span>
        </p>
        <button @onclick="Refresh">Another...</button>
    </div>
    <p><em>Generated by an AI. Opinions are it's own and generally pretty random. Please don't sue me.</em></p>    
    <div class="dev">
        <div>AI Model: @_review.Model</div>
        <div>Tone: @_review.Tone</div>
        <div>Error: @_review.Error</div>
        <hr/>
        @foreach(var x in _review.Benchmarks)
        {
            <div>@x.Name @x.Elapsed</div>
        }
    </div>
}

@code {
    private Review _review;

    protected override async Task OnInitializedAsync()
    {
        await LoadRandomReviewAsync();
    }

    private async Task Refresh()
    {
        await LoadRandomReviewAsync();
    }

    private async Task LoadRandomReviewAsync()
    {
        try
        {
            _review = null;
            _review = await _http.GetFromJsonAsync<Review>($"/api/wine/random-review");

            this.StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
